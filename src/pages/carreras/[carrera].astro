---
import type {GetStaticPaths} from "astro"

import {carreras} from "@data/carreras.json"

import Layout from "@layouts/Layout.astro"
import AñoCarrera from "@components/AñoCarrera.astro"
import HeaderCarrera from "@components/HeaderCarrera.astro"
import TarjetaMateria from "@components/TarjetaMateria.astro"
import BotonAño from "@components/BotonAño.jsx"
import BuscadorMaterias from "@components/BuscadorMaterias.jsx"

export const getStaticPaths: GetStaticPaths = () => {
	return carreras
		.filter(({cursada}) => cursada.length > 0) // Filtrar carreras sin cursada
		.map(({carrera}) => ({
			params: {carrera},
		}))
}

const {carrera} = Astro.params

// Buscar los datos específicos de la carrera
const carreraData = carreras.find((c) => c.carrera === carrera)

if (!carreraData) {
	throw new Error(`Carrera no encontrada: ${carrera}`)
}

const NombreCarrera = carreraData.carrera.replace(/-/g, " ")
---

<Layout title={`${NombreCarrera} | Plan de estudio`} theme={carreraData.carrera}>
	<!-- Titulo de Pagina -->
	<HeaderCarrera carrera={carreraData.carrera} emoji={carreraData.emoji} />
	<BotonAño carreraData={carreraData} client:visible />
	<BuscadorMaterias client:visible />
	
	<!-- map de array de los años -->
	<div id="materias-container" class="space-y-8">
	{carreraData.cursada?.map(({año, materias, orientaciones}) => {
		if (orientaciones?.length > 0) {
			// Si el año tiene orientaciones
			return orientaciones.map(({nombre: orientacionNombre, materias: orientacionMaterias}) => (
				<AñoCarrera año={año} orientacion={orientacionNombre} theme={carreraData.carrera}>
					{orientacionMaterias.map(({materia, codigo, paraCursar, paraRendir, planDeEstudio, mesas}) => (
						<TarjetaMateria
							materia={materia}
							codigo={codigo}
							paraCursar={paraCursar}
							paraRendir={paraRendir}
							planDeEstudio={planDeEstudio}
							mesas={mesas}
							theme={carreraData.carrera}
						/>
					))}
				</AñoCarrera>
			))
		} else {
			// Si el año no tiene orientaciones
			return (
				<AñoCarrera año={año} theme={carreraData.carrera}>
					{materias?.map(({materia, codigo, paraCursar, paraRendir, planDeEstudio, mesas}) => (
						<TarjetaMateria
							materia={materia}
							codigo={codigo}
							paraCursar={paraCursar}
							paraRendir={paraRendir}
							planDeEstudio={planDeEstudio}
							mesas={mesas}
							theme={carreraData.carrera}
						/>
					))}
				</AñoCarrera>
			)
		}
	})}
	</div>
</Layout>

<script>
	function handleSearch(searchTerm) {
		const searchTermLower = searchTerm.toLowerCase();
		const materiasContainer = document.getElementById('materias-container');
		const tarjetas = materiasContainer.getElementsByClassName('materia-card');

		Array.from(tarjetas).forEach(tarjeta => {
			const nombreMateria = tarjeta.querySelector('h3')?.textContent?.toLowerCase() || '';
			const codigoMateria = tarjeta.querySelector('.codigo')?.textContent?.toLowerCase() || '';
			
			if (nombreMateria.includes(searchTermLower) || codigoMateria.includes(searchTermLower)) {
				tarjeta.style.display = '';
			} else {
				tarjeta.style.display = 'none';
			}
		});
	}

	// Exponer la función al componente React
	window.handleSearch = handleSearch;
</script>
