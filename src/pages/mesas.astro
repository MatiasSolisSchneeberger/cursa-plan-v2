---
import Layout from "@layouts/Layout.astro";
import { examenes } from "@data/mesaDeExamenes.json";
import BuscadorMaterias from "@components/BuscadorMaterias";
import { Icon } from "astro-icon/components";
import FechaMesas from "@components/FechaMesas.astro"

// Helper function to generate Google Calendar links
const generateCalendarLink = (fecha: string, asignatura: string): string => {
	// Convert dd/mm/yyyy to Date object
	const [day, month, year] = fecha.split("/");

	const startDate = `${year}${month.padStart(2, "0")}${day.padStart(2, "0")}`;
	const examDate = new Date(Number(year), Number(month) - 1, Number(day));
	const examDateNext = new Date(examDate);
	examDateNext.setDate(examDate.getDate() + 1);

	const nextYear = examDateNext.getFullYear();
	const nextMonth = (examDateNext.getMonth() + 1).toString().padStart(2, "0");
	const nextDay = examDateNext.getDate().toString().padStart(2, "0");

	const endDate = `${nextYear}${nextMonth}${nextDay}`;

	return `https://www.google.com/calendar/render?action=TEMPLATE&text=Examen%20De%20${encodeURIComponent(asignatura)}&dates=${startDate}/${endDate}`;
};
---

<Layout title="Mesas de Examen" pagina="Mesas de Exámenes">
	<section class="space-y-4">
		<BuscadorMaterias
			client:load
			placeholder="Buscar materia..."
			targetClass="mesa-row"
		/>
		{
			examenes.length > 0 && (
				<article class="mt-4 w-full overflow-x-auto">
				
					{/* Tarjeta Materia - Mesa */}
					<div class="grid grid-cols-1 flex-col gap-4 sm:grid-cols-2 md:grid-cols-3 2xl:grid-cols-4">
						{examenes.map(({ asignatura, turnos }) => {
							// Ordenar turnos por fecha y filtrar fechas pasadas
							const today = new Date();
							today.setHours(0, 0, 0, 0);

							const sortedTurnos = [...turnos]
								.filter((turno) => {
									if (!turno.fecha) return false;

									// Check if the date has passed
									const [day, month, year] = turno.fecha
										.split("/")
										.map(Number);
									const examDate = new Date(
										year,
										month - 1,
										day,
									);
									examDate.setHours(0, 0, 0, 0);

									// Only include dates that haven't passed yet
									return examDate >= today;
								})
								.map((turno) => {
									// Convert dd/mm/yyyy to yyyy-mm-dd for sorting
									const [day, month, year] =
										turno.fecha.split("/");
									return {
										...turno,
										fechaOrdenada: `${year}-${month}-${day}`,
									};
								})
								.sort((a, b) => {
									return (
										new Date(a.fechaOrdenada).getTime() -
										new Date(b.fechaOrdenada).getTime()
									);
								});

							// Obtener próxima mesa (primera fecha futura)
							const proximaMesa =
								sortedTurnos.length > 0
									? sortedTurnos[0]
									: null;

							// Generar URL para Google Calendar
							const eventUrl = proximaMesa
								? generateCalendarLink(
										proximaMesa.fecha,
										asignatura,
									)
								: "";

							return (
								<article id={asignatura.replace(/-/g, " ")} class="mesa-row full relative flex w-full flex-1 flex-col items-center justify-start gap-2.5 overflow-hidden rounded-3xl border border-outline p-2">
									<header class="relative flex w-full shrink-0 flex-row items-center justify-center gap-2.5 self-stretch rounded-2xl bg-primary p-1.5 text-on-primary">
										<h3 class="text-headline-small relative flex flex-1 items-center justify-center text-center text-pretty">
											{asignatura.replace(/-/g, " ")}
										</h3>
									</header>
									<footer class="flex h-full w-full flex-col gap-2.5">
										<FechaMesas materia={asignatura} dispositivo="Desktop" originalMateria={asignatura} />
									</footer>
								</article>
							);
						})}
					</div>
				</article>
			)
		}
	</section>
</Layout>
