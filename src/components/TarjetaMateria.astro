---
import { Icon } from "astro-icon/components";
import RequisitosPara from "./RequisitosPara.astro";
import FechaMesas from "./FechaMesas.astro";
import FechaMesasV2 from "./FechaMesasV2.astro";

interface Props {
	materia: string;
	originalMateria: string;
	codigo?: number;
	paraCursar: Condicion[] | null;
	paraRendir: Condicion[] | null;
	planDeEstudio: string | null;
	carrera?: string;
}
interface Condicion {
	mat: string;
	cond: "R" | "A";
}

const {
	materia,
	originalMateria,
	codigo,
	paraCursar,
	paraRendir,
	planDeEstudio,
	carrera,
} = Astro.props;


const baseURL = "https://www.google.com/calendar/render?action=TEMPLATE";


---

<article
	class={`materia-card theme-${carrera} w-full border-outline full rounded-3xl border p-2 flex flex-col gap-2.5 items-center justify-start flex-1 relative overflow-hidden`}
	data-materia={originalMateria}
	data-codigo={codigo}
	id={originalMateria}>
	<header
		class="relative flex w-full shrink-0 flex-row items-center justify-center gap-2.5 self-stretch rounded-2xl bg-primary p-1.5 text-on-primary">
		<h3
			class="text-headline-small relative flex flex-1 items-center justify-center text-center text-pretty">
			{materia}
		</h3>
		<FechaMesasV2 materia={materia}/>
	</header>

	<!-- Mobile slider / Desktop stack container -->
	<div class="flex w-full flex-col gap-2.5">
		<!-- Mobile slider container -->
		<div
			class="flex w-full flex-col items-center justify-center gap-2.5 sm:hidden">
			<!-- Scrollable container -->
			<div
				class="slider-container hide-scrollbar flex h-full w-full snap-x snap-mandatory gap-2 overflow-x-auto">
				<!-- Requisitos -->
				<section
					class="flex h-full w-full flex-none snap-center items-start justify-start gap-2.5">
					<div class="flex h-full w-full flex-col gap-2.5">
						<div class="flex flex-grow flex-col gap-2.5">
							<RequisitosPara
								CursarRendir="Cursar"
								requisitos={paraCursar}
							/>
							<RequisitosPara
								CursarRendir="Rendir"
								requisitos={paraRendir}
							/>
						</div>
					</div>
				</section>

				<!-- Footer -->
				<footer
					class="flex h-full w-full flex-none snap-center items-start justify-start gap-2.5">
					<div class="flex h-full w-full flex-col gap-2.5">
						<!-- Mesa de Examenes -->
						<FechaMesas materia={materia} dispositivo="Mobile" originalMateria={originalMateria}/>
						<div
							class="relative flex w-full shrink-0 flex-col items-center justify-start gap-2.5 self-stretch overflow-hidden rounded-2xl bg-surface-variant p-2.5">
							<header
								class="text-title-small w-full rounded-lg bg-secondary p-2 text-center text-on-secondary">
								Plan De Estudio
							</header>
							<footer
								class="relative flex shrink-0 flex-wrap items-start justify-start gap-2.5 self-stretch">
								<md-outlined-button
									class="w-full flex-1 px-6"
									disabled={!planDeEstudio}
									>Ver</md-outlined-button
								>
								<md-filled-button
									class="w-full flex-1 px-6"
									disabled={!planDeEstudio}
									>Descargar</md-filled-button
								>
							</footer>
						</div>
				</footer>
			</div>

			<!-- Indicator dots -->
			<div
				class="flex w-min justify-center gap-2 rounded-full bg-primary-container px-3 py-2">
				<button
					class="slider-dot h-2 w-2 rounded-full bg-on-primary-container opacity-50"
					data-index="0"></button>
				<button
					class="slider-dot h-2 w-2 rounded-full bg-on-primary-container opacity-50"
					data-index="1"></button>
			</div>
		</div>

		<!-- Desktop stack -->
		<div class="hidden w-full flex-col gap-2.5 sm:flex">
			<!-- Requisitos -->
			<section class="flex w-full items-start justify-start gap-2.5">
				<div class="flex w-full flex-col gap-2.5 lg:flex-row">
					<RequisitosPara
						CursarRendir="Cursar"
						requisitos={paraCursar}
					/>
					<RequisitosPara
						CursarRendir="Rendir"
						requisitos={paraRendir}
					/>
				</div>
			</section>

			<md-divider role="separator" style="--md-divider-thickness: 2px"
			></md-divider>

			<!-- Footer -->
			<footer class="flex w-full items-start justify-start gap-2.5">
				<div class="flex w-full flex-col gap-2.5 lg:flex-row">
					<!-- Mesa de Examenes -->
					<FechaMesas materia={materia} dispositivo="Desktop" originalMateria={originalMateria}/>

					<div
						class="relative flex w-full shrink-0 flex-col items-center justify-start gap-2.5 self-stretch overflow-hidden rounded-2xl bg-surface-variant p-2.5 sm:flex-1 lg:w-1/2">
						<header
							class="text-title-small w-full rounded-lg bg-secondary p-2 text-center text-on-secondary">
							Plan De Estudio
						</header>
						<footer
							class="relative flex shrink-0 flex-wrap items-start justify-start gap-2.5 self-stretch">
							<md-outlined-button
								class="w-full flex-1 px-6"
								disabled={!planDeEstudio}
								href={planDeEstudio}>
								Ver
							</md-outlined-button>
							<md-filled-button
								class="w-full flex-1 px-6"
								disabled={!planDeEstudio}
								href={planDeEstudio}
								download=`Programa - ${materia}.pdf`>
								Descargar
							</md-filled-button>
						</footer>
					</div>
				</div>
			</footer>
		</div>
	</div>
</article>

<script is:inline>

	// Add slider functionality
	document.addEventListener("DOMContentLoaded", () => {
		const sliders = document.querySelectorAll(".slider-container");

		sliders.forEach((slider) => {
			const dots = slider.parentElement.querySelectorAll(".slider-dot");

			// Update dots on scroll
			slider.addEventListener("scroll", () => {
				const slideWidth = slider.offsetWidth;
				const scrollPosition = slider.scrollLeft;
				const activeIndex = Math.round(scrollPosition / slideWidth);

				dots.forEach((dot, index) => {
					dot.classList.toggle("active", index === activeIndex);
				});
			});

			// Initial active state
			dots[0].classList.add("active");

			// Add click handlers to dots
			dots.forEach((dot, index) => {
				dot.addEventListener("click", () => {
					const slideWidth = slider.offsetWidth;
					slider.scrollTo({
						left: slideWidth * index,
						behavior: "smooth",
					});
				});
			});
		});
	});
</script>

<style>
	
	/* Hide scrollbar but keep functionality */
	.hide-scrollbar {
		-ms-overflow-style: none; /* IE and Edge */
		scrollbar-width: none; /* Firefox */
	}
	.hide-scrollbar::-webkit-scrollbar {
		display: none; /* Chrome, Safari and Opera */
	}

	/* Slider container styles */
	.slider-container {
		scroll-behavior: smooth;
	}

	/* Desktop styles */
	@media (min-width: 1024px) {
		.slider-container {
			overflow-x: visible;
		}
	}

	/* Active dot style */
	.slider-dot.active {
		opacity: 1;
	}
</style>
