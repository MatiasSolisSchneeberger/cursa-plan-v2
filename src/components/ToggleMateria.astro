---
// Componente Astro
const {materia, mesas, planDeEstudio} = Astro.props

const baseURL = "https://www.google.com/calendar/render?action=TEMPLATE"

// Funciones helper (también podrías importarlas desde un archivo utils)
const formatDate = (date: Date) => new Date(date).toLocaleDateString("es-ES")

const obtenerProximaFecha = (fechas: {fecha: string}[]) => {
	const fechasFuturas = fechas.map(f => new Date(f.fecha)).filter(fecha => fecha > new Date())
	return fechasFuturas.length > 0 ?
			fechasFuturas.reduce((a, b) => (a.getTime() - Date.now() < b.getTime() - Date.now() ? a : b))
		:	null
}
---

<article class="flex flex-col gap-2.5 h-min w-full">
	<header
		class="bg-[var(--md-sys-color-primary)] text-[var(--md-sys-color-on-primary)] rounded-br-2xl rounded-bl-2xl p-1.5 flex flex-row gap-2.5 items-center w-full justify-center self-stretch shrink-0 relative">
		<h3
			class="text-[var(--md-sys-color-on-primary)] text-center text-headline-small relative flex-1 flex items-center justify-center text-pretty">
			{materia}
		</h3>

		<md-filled-tonal-icon-button
			id={`toggle-${materia.replace(/\s+/g, "-").toLowerCase()}`}
			class="toggle-button"
			trailing-icon>
			<svg
				id="icon-up"
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="currentColor">
				<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
				<path
					d="M11.293 7.293a1 1 0 0 1 1.32 -.083l.094 .083l6 6l.083 .094l.054 .077l.054 .096l.017 .036l.027 .067l.032 .108l.01 .053l.01 .06l.004 .057l.002 .059l-.002 .059l-.005 .058l-.009 .06l-.01 .052l-.032 .108l-.027 .067l-.07 .132l-.065 .09l-.073 .081l-.094 .083l-.077 .054l-.096 .054l-.036 .017l-.067 .027l-.108 .032l-.053 .01l-.06 .01l-.057 .004l-.059 .002h-12c-.852 0 -1.297 -.986 -.783 -1.623l.076 -.084l6 -6z"
				></path>
			</svg>
			<svg
				id="icon-down"
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="currentColor"
				hidden>
				<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
				<path
					d="M18 9c.852 0 1.297 .986 .783 1.623l-.076 .084l-6 6a1 1 0 0 1 -1.32 .083l-.094 -.083l-6 -6l-.083 -.094l-.054 -.077l-.054 -.096l-.017 -.036l-.027 -.067l-.032 -.108l-.01 -.053l-.01 -.06l-.004 -.057v-.118l.005 -.058l.009 -.06l.01 -.052l.032 -.108l.027 -.067l.07 -.132l.065 -.09l.073 -.081l.094 -.083l.077 -.054l.096 -.054l.036 -.017l.067 -.027l.108 -.032l.053 -.01l.06 -.01l.057 -.004l12.059 -.002z"
				></path>
			</svg>
		</md-filled-tonal-icon-button>
	</header>

	<footer
		id={`content-${materia.replace(/\s+/g, "-").toLowerCase()}`}
		class="hidden w-full flex-col sm:flex-row gap-2 p-2">
		<!-- Sección de mesas -->
		<section
			class="md:w-full md:flex-1 outline outline-outline rounded-xl p-2 flex flex-col gap-2.5 items-center justify-start self-stretch shrink-0 relative overflow-hidden">
			<div
				class="bg-[var(--md-sys-color-secondary)] text-[var(--md-sys-color-on-secondary)] rounded-2xl p-2.5 flex flex-wrap gap-2.5 items-center justify-center self-stretch shrink-0 relative">
				{
					mesas?.length > 0 ?
						<>
							<p class="text-title-medium relative flex-1 flex items-center text-nowrap justify-center">
								Próxima Mesa:
							</p>
							<p class="text-center text-title-small flex-1 relative flex items-center justify-center">
								{obtenerProximaFecha(mesas) ? formatDate(obtenerProximaFecha(mesas)) : "No hay fechas futuras"}
							</p>
						</>
					:	<p class="text-title-medium relative flex-1 flex items-center justify-center">No hay fechas</p>
				}
			</div>
			<div class="flex flex-wrap gap-2.5 w-full">
				<md-filled-tonal-button
					id={`btn-dialog-${materia.replace(/\s+/g, "-").toLowerCase()}`}
					class="w-full flex-1 text-[var(--md-sys-color-on-primary)]"
					disabled={!mesas?.length}>
					Ver Mas
				</md-filled-tonal-button>

				<!-- Dialog -->
				<md-dialog id={`dialog-${materia.replace(/\s+/g, "-").toLowerCase()}`} class="w-full">
					<div slot="icon">
						<!-- Icono del calendario -->
					</div>
					<h4 slot="headline" class="flex">Información adicional</h4>
					<div slot="content" class="text-body-large">{materia} hola</div>
					<div slot="actions">
						<md-text-button class="close-dialog">Cerrar</md-text-button>
					</div>
				</md-dialog>

				<md-filled-button
					href={mesas?.length > 0 && mesas[0]?.fecha ?
						`${baseURL}&text=Mesa+de+${materia}&dates=${new Date(mesas[0].fecha)
							.toISOString()
							.replace(/-|:|\.\d+/g, "")}`
					:	"#"}
					target="_blank"
					rel="noopener noreferrer"
					class="w-full flex-1"
					disabled={!mesas?.length}>
					Agendar
				</md-filled-button>
			</div>
		</section>

		<!-- Sección plan de estudios -->
		<section
			class="md:w-full md:flex-1 border border-outline rounded-xl p-2 flex flex-col gap-2.5 items-center justify-start self-stretch shrink-0 relative overflow-hidden">
			<!-- Contenido similar... -->
		</section>
	</footer>
</article>

<script is:inline>
	// Toggle visibilidad
	document.querySelectorAll(".toggle-button").forEach((button) => {
		button.addEventListener("click", (e) => {
			const materiaId = e.currentTarget.id.replace("toggle-", "")
			const content = document.getElementById(`content-${materiaId}`)
			const iconUp = e.currentTarget.querySelector("#icon-up")
			const iconDown = e.currentTarget.querySelector("#icon-down")

			content.classList.toggle("hidden")
			iconUp.toggleAttribute("hidden")
			iconDown.toggleAttribute("hidden")
		})
	})

	// Control de diálogos
	document.querySelectorAll('[id^="btn-dialog-"]').forEach((button) => {
		button.addEventListener("click", (e) => {
			const materiaId = e.currentTarget.id.replace("btn-dialog-", "")
			const dialog = document.getElementById(`dialog-${materiaId}`)
			dialog.showModal()
		})
	})

	// Cerrar diálogos
	document.querySelectorAll(".close-dialog").forEach((button) => {
		button.addEventListener("click", (e) => {
			e.currentTarget.closest("md-dialog").close()
		})
	})
</script>

<style>
	.hidden {
		display: none;
	}
</style>
